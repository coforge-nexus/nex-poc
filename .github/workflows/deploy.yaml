name: Update ECR Image in values.yaml

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write  # Required for requesting the JWT
  contents: write  # Required for actions/checkout
  actions: write   # Required for actions

env:
  ECR_REPOSITORY: nexus-repo  # Your ECR repository name
  AWS_REGION: eu-west-1        # Your AWS region
  VALUES_FILE: nexus-application/values.yaml  # Path to your values.yaml file in the other repo
  OTHER_REPO: coforge-nexus/helmcharts  # Target repository for values.yaml
  HELM_ECR_REPOSITORY: ***.dkr.ecr.eu-west-1.amazonaws.com/helm-test-chart  # ECR repository URL
  AWS_DEFAULT_REGION: eu-west-1

jobs:
  update-deployment:
    name: Build, Push Image, and Update values.yaml
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials from OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get commit hash
        id: get-commit-hash
        run: echo "commit_hash=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Get timestamp
        id: get-timestamp
        run: echo "timestamp=$(date +'%Y-%m-%d-%H-%M')" >> $GITHUB_ENV

      - name: Build, Tag, and Push Docker Image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ env.commit_hash }}-${{ env.timestamp }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f docker/Dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Update values.yaml with New Image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ env.commit_hash }}-${{ env.timestamp }}
          MY_GITHUB_PAT: ${{ secrets.MY_GITHUB_PAT }}  # Use your GitHub Personal Access Token from secrets
        run: |
          # Checkout the other repository with the token
          git clone https://$MY_GITHUB_PAT:x-oauth-basic@github.com/${{ env.OTHER_REPO }}.git other-repo
          cd other-repo
          
          # Update the values.yaml file with the new image
          sed -i "s|repository: .*|repository: $ECR_REGISTRY/$ECR_REPOSITORY|" ${{ env.VALUES_FILE }}
          sed -i "s|tag: .*|tag: $IMAGE_TAG|" ${{ env.VALUES_FILE }}

          # Commit the changes
          git config --local user.email "Gandam.manikantha@coforge.com"
          git config --local user.name "Ubhaskar-coforge"
          git add ${{ env.VALUES_FILE }}
          git commit -m "Update values.yaml with new image tag $IMAGE_TAG"

          # Push the changes using the token
          git push https://$MY_GITHUB_PAT:x-oauth-basic@github.com/${{ env.OTHER_REPO }}.git

      - name: Package Helm Chart on Remote Server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}  # Ensure you have this secret set in your GitHub repository
        run: |
          echo "$SSH_PRIVATE_KEY" > id_rsa
          chmod 600 id_rsa
          ssh -i id_rsa -o StrictHostKeyChecking=no ubuntu@52.214.201.164 "helm package /home/ubuntu/helm-test-chart"
          rm id_rsa

      - name: Push Helm Chart to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ env.commit_hash }}-${{ env.timestamp }}
          HELM_CHART_NAME: helm-test-chart  # Name of your Helm chart
        run: |
          # Assuming the Helm chart is packaged and stored in a specific location
          # Adjust the path according to where the chart is packaged
          CHART_FILE="$HELM_CHART_NAME-$IMAGE_TAG.tgz"
          CHART_PATH="/home/ubuntu/$CHART_FILE"
          
          # Copy the chart file to the local machine (assuming the chart was packaged on the remote server)
          scp -i id_rsa -o StrictHostKeyChecking=no ubuntu@52.214.201.164:$CHART_PATH .
          
          # Push the Helm chart to ECR
          aws ecr put-image --repository-name $ECR_REPOSITORY --image-tag $IMAGE_TAG --image-manifest file://$CHART_FILE
