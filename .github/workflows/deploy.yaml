name: Build and Deploy Docker and Helm to ECR

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: write
  actions: write

env:
  ECR_DOCKER_REPOSITORY: nexus-repo
  ECR_HELM_REPOSITORY: helm-test-chart
  AWS_REGION: eu-west-1
  VALUES_FILE: nexus-application/values.yaml
  TARGET_REPO: coforge-nexus/helmcharts
  HELM_CHART_URL: https://github.com/coforge-nexus/helmcharts/raw/main/helm-test-chart/helm-test-chart-0.1.0.tgz  # URL to the Helm chart

jobs:
  deploy:
    name: Build, Push Docker and Helm to ECR, and Update values.yaml
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Get Commit Hash and Timestamp
        run: |
          echo "commit_hash=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "timestamp=$(date +'%Y-%m-%d-%H-%M')" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag, and Push Docker Image to ECR
        id: build-docker-image
        env:
          ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          IMAGE_TAG: ${{ env.commit_hash }}-${{ env.timestamp }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_DOCKER_REPOSITORY:$IMAGE_TAG -f docker/Dockerfile .
          docker push $ECR_REGISTRY/$ECR_DOCKER_REPOSITORY:$IMAGE_TAG

      - name: Download Helm Chart
        run: |
          curl -L -o helm-test-chart-0.1.0.tgz ${{ env.HELM_CHART_URL }}
          file helm-test-chart-0.1.0.tgz  # Check file type

      - name: Extract Helm Chart
        run: |
          tar -xzf helm-test-chart-0.1.0.tgz || echo "Error extracting the Helm chart."

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Package Helm Chart
        id: package-helm
        env:
          IMAGE_TAG: ${{ env.commit_hash }}-${{ env.timestamp }}
        run: |
          helm package helm-test-chart --version "0.1.0-${{ env.commit_hash }}" --app-version "0.1.0-${{ env.commit_hash }}"

      - name: Push Helm Chart to ECR as OCI
        env:
          ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          IMAGE_TAG: ${{ env.commit_hash }}-${{ env.timestamp }}
        run: |
          echo $(aws ecr get-login-password --region ${{ env.AWS_REGION }}) | helm registry login -u AWS --password-stdin $ECR_REGISTRY
          helm chart save helm-test-chart-0.1.0-${{ env.commit_hash }}.tgz oci://$ECR_REGISTRY/$ECR_HELM_REPOSITORY
          helm chart push oci://$ECR_REGISTRY/$ECR_HELM_REPOSITORY

      - name: Update values.yaml with New Image Tag
        env:
          ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          IMAGE_TAG: ${{ env.commit_hash }}-${{ env.timestamp }}
          MY_GITHUB_PAT: ${{ secrets.MY_GITHUB_PAT }}
        run: |
          git clone https://${{ secrets.MY_GITHUB_PAT }}:x-oauth-basic@github.com/${{ env.TARGET_REPO }}.git target-repo
          cd target-repo
          sed -i "s|repository: .*|repository: $ECR_REGISTRY/$ECR_DOCKER_REPOSITORY|" ${{ env.VALUES_FILE }}
          sed -i "s|tag: .*|tag: $IMAGE_TAG|" ${{ env.VALUES_FILE }}
          git config --local user.email "Gandam.manikantha@coforge.com"
          git config --local user.name "Ubhaskar-coforge"
          git add ${{ env.VALUES_FILE }}
          git commit -m "Update values.yaml with new image tag $IMAGE_TAG"
          git push origin main
